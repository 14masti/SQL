CREATE TABLE InsurancePackages (
    insp_id serial PRIMARY KEY, 
    insp_title varchar(60),
    insp_desc varchar(255),
    insp_status char(2),
    insp_range_start numeric,
    insp_range_end numeric,
    insp_agelimit_start int,
    insp_agelimit_end int,
    insp_cdate date
);


CREATE TABLE NetworkHospitals (
    hosp_id serial PRIMARY KEY,  
    hosp_title varchar(70),
    hosp_location varchar(50),
    hosp_address varchar(100),
    hosp_contactmobile bigint,
    hosp_contactphone bigint,
    hosp_pincode int,
    hosp_luudate date,
    hosp_luuser int,
    hosp_city varchar(50),
    hosp_grade varchar(10),
    hosp_facility varchar(255)
);




CREATE TABLE Customers (
    cust_id serial PRIMARY KEY,  
    cust_fname varchar(50),
    cust_lname varchar(50),
    cust_dob date,
    cust_address varchar(255),
    cust_gender char(1),
    cust_cdate date,
    cust_aadhar bigint, 
    cust_status char(2),
    cust_luudate date,
    cust_luuser int
);


CREATE TABLE Users (
    user_id serial PRIMARY KEY,  
	user_name varchar(255),  
    user_cdate date,
    user_pwd varchar(100),
    user_type char(4),
    user_status char(2)
);

CREATE TABLE Diseases (
    disc_id serial PRIMARY KEY,  
	disc_name varchar(100),
    disc_icdcode varchar(10),
    disc_desc varchar(255),
    disc_status char(2)
);


CREATE TABLE InsurancePackageCoveredDiseases (
    insp_id int,
    disc_id int,
    PRIMARY KEY (insp_id, disc_id),
    FOREIGN KEY (insp_id) REFERENCES InsurancePackages (insp_id),
    FOREIGN KEY (disc_id) REFERENCES Diseases (disc_id)
);


CREATE TABLE Agent (
    agnt_id serial PRIMARY KEY, 
	agnt_name varchar(255),
    agnt_age int,
    agnt_gender char(1)
);


CREATE TABLE InsurancePolicies (
    iplc_id serial PRIMARY KEY,  
	iplc_cust_id int,
    iplc_cdate date,
    iplc_sum_assured numeric,
    iplc_applicable_date date,
    iplc_insp_id int,
    iplc_yrly_prem_amount numeric,
    iplc_expdate date,
    iplc_agnt_id int,
    FOREIGN KEY (iplc_cust_id) REFERENCES Customers (cust_id),
    FOREIGN KEY (iplc_insp_id) REFERENCES InsurancePackages (insp_id),
    FOREIGN KEY (iplc_agnt_id) REFERENCES Agent (agnt_id)
);


CREATE TABLE InsurancePolicySchedule (
    iplc_id int,
    iplc_sindex smallint,
    iplc_date date,
    iplc_premium numeric,
    iplc_paid_date date,
    PRIMARY KEY (iplc_id, iplc_sindex),
    FOREIGN KEY (iplc_id) REFERENCES InsurancePolicies (iplc_id)
);

CREATE TABLE InsurancePolicyPayments (
    inpp_id serial PRIMARY KEY,  
	inpp_iplc_id int,
    inpp_trans_id varchar(50),
    inpp_amount numeric,
    inpp_paymode char(10)
);
CREATE TABLE Claims (
    clam_id serial PRIMARY KEY,
    clam_source character(4),
    clam_type character(4),
    clam_date date,
    clam_amount_requested numeric,
    clam_iplc_id int,
    clam_processed_amount numeric,
    clam_processed_date date,
    clam_processed_by int,
    clam_remarks varchar(1000),
    clam_status character(4)
);


CREATE TABLE ClaimBills (
    clam_id int,
    clbl_billindex smallint,
    clbl_document_title varchar(100),
    clbl_document_path varchar(255),
    clbl_claim_amount numeric,
    clbl_processed_amount numeric,
    clbl_processed_date date,
    clbl_processed_by int,
    clbl_remarks varchar(1000),
    clbl_status character(4),
    PRIMARY KEY (clam_id, clbl_billindex)
);

CREATE TABLE HospitalClaims (
    clam_id int,
    hclm_hosp_id int,
    hclm_husr_id int
);


/-------- 4 tables are remaining are created without relations
1.Claims
2.Claimsbills
3.ReimbursementClaims  ----- this table is not  created
4.hospitalClaims--------------/








select * from InsurancePolicyPayments



CREATE TABLE InsurancePolicyPayments (
    inpp_id serial PRIMARY KEY,  
	inpp_iplc_id int,
    inpp_trans_id varchar(50),
    inpp_amount numeric,
    inpp_paymode char(10)
);
select * from InsurancePolicies 

ALTER TABLE InsurancePolicies
ADD COLUMN iplc_mode varchar(10);

-- Sample data for the InsurancePolicies table
INSERT INTO InsurancePolicies (iplc_cust_id, iplc_cdate, iplc_sum_assured, iplc_applicable_date, iplc_insp_id, iplc_yrly_prem_amount, iplc_expdate, iplc_agnt_id, iplc_mode)
VALUES
    (1, '2023-09-25', 100000, '2023-10-01', 1, 1200, '2024-09-25', 1, 'yearly'),
    (2, '2023-09-25', 75000, '2023-10-01', 2, 800, '2024-09-25', 2, 'monthly'),
    (3, '2023-09-25', 50000, '2023-10-01', 3, 600, '2024-09-25', 3, 'quarterly');

delete  from InsurancePolicyPayments where inpp_id=9

select * from agent
select * from InsurancePackages 
select * from Customers

select * from 
INSERT INTO Agent (agnt_name, agnt_age, agnt_gender)
VALUES
    ('John Smith', 35, 'M'),
    ('Jane Doe', 28, 'F'),
    ('Bob Johnson', 42, 'M');
    
    
    
INSERT INTO InsurancePolicySchedule (iplc_id, iplc_sindex, iplc_date, iplc_premium, iplc_paid_date)
VALUES
    (13, 1, '2023-09-25', 100, '2023-09-25'),
    (13, 2, '2023-10-25', 100, '2023-10-25'),
    (14, 1, '2023-09-25', 75, '2023-09-25'),
    (14, 2, '2023-10-25', 75, '2023-10-25'),
    (15, 1, '2023-09-25', 50, '2023-09-25');
    
    
    
CREATE OR REPLACE FUNCTION CreatePolicyPayments(policy_id int) RETURNS void AS $$
DECLARE
    schedule_row record;
BEGIN
    -- Loop through the schedule records for the specified policy
    FOR schedule_row IN
        SELECT * FROM InsurancePolicySchedule
        WHERE iplc_id = policy_id
    LOOP
        -- Insert a record into InsurancePolicyPayments with inpp_trans_id as NULL
        INSERT INTO InsurancePolicyPayments (inpp_iplc_id, inpp_trans_id, inpp_amount, inpp_paymode)
        VALUES (schedule_row.iplc_id, NULL, schedule_row.iplc_premium, 'CARD');
    END LOOP;
END;
$$ LANGUAGE plpgsql;




-- Call the procedure for policy with ID 13
SELECT CreatePolicyPayments(15);


